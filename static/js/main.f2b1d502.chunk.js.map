{"version":3,"sources":["NavBar/images/logo.png","NavBar/NavBar.js","Login_register/Login.js","Login_register/Register.js","Accueil/Acceuil.js","Profil/Preference.js","Position/Position.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","props","toggleNavbar","bind","state","collapsed","this","setState","classOne","classTwo","className","href","src","logo","alt","width","height","onClick","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","Login","alertShow","alertMessage","alertVariant","email","password","event","preventDefault","axios","require","default","sha256","url","URL_API","get","then","res","data","console","log","catch","err","target","name","value","Alert","variant","show","onClose","dismissible","onSubmit","sendLogin","placeholder","onChange","inputChange","to","Register","verifPassword","prenom","nom","dateBirth","ville","StudentCard","alertClass","etape","curr","Date","setDate","getDate","toISOString","substr","positionArobase","indexOf","length","verif","formData","FormData","append","post","error","files","reader","FileReader","readAsDataURL","onload","e","sendAccount","htmlFor","maxLength","min","max","fifteenYearsAgo","sendCard","color","inputChangeStudentCard","Accueil","etat","changeShow","aria-hidden","Preference","Description","Taille","City","value1","for","selected","draggableTrack","maxValue","minValue","onChangeComplete","value5","style","resize","rows","cols","maxlength","Position","lat","long","i","features","properties","city","geometry","coordinates","inputChangeVille","App","path","exact","component","React","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f2b1d502.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.1e0b9a13.png\";","import React, { Component } from 'react';\r\n\r\nimport logo from './images/logo.png';\r\n\r\n\r\n\r\nclass NavBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.state = {\r\n      collapsed: true,\r\n    };\r\n  }\r\n  toggleNavbar() {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  }\r\n  render() {\r\n    const collapsed = this.state.collapsed;\r\n    const classOne = collapsed ? 'collapse navbar-collapse' : 'collapse navbar-collapse show';\r\n    const classTwo = collapsed ? 'navbar-toggler navbar-toggler-right collapsed' : 'navbar-toggler navbar-toggler-right';\r\n    return (\r\n    <nav className = \"navbar navbar-expand-md bg-grad navbar-dark sticky-top\">\r\n    <div className=\"container\">\r\n      <a className=\"navbar-brand\" href=\"/\">\r\n    \t<img src={logo} alt=\"logo\" width=\"40px\" height=\"40px\"/>\r\n\t  </a>\r\n      <button  onClick={this.toggleNavbar} className={`${classTwo}`} type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n        <div className={`${classOne}`} id=\"navbarResponsive\">\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            \r\n            <li className=\"nav-item active\">\r\n              <a className=\"collapsed nav-link\" href=\"/\">Home </a>\r\n            </li>\r\n            \r\n            <li className=\"nav-item active\">\r\n              <a className=\"nav-link\" href=\"/about\">About </a>\r\n            </li>\r\n            \r\n            <li className=\"nav-item active\">\r\n              <a className=\"nav-link\" href=\"/contact\">Contact </a>\r\n            </li>\r\n\r\n          </ul>\r\n        </div>\r\n    </div>\r\n  </nav>\r\n    );\r\n  }\r\n}\r\nexport default NavBar;\r\n\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nimport {URL_API} from '../App';\r\n\r\nclass Login extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n          alertShow: false, alertMessage : \"\", alertVariant:\"\",//Affichage, message et type de l'alerte\r\n          email: \"\", password : \"\" //Input mail et password\r\n        };\r\n      }\r\n     \r\n      sendLogin(event) {\r\n        event.preventDefault();\r\n        const axios = require('axios').default;  //Requêtes HTTP\r\n        const sha256 = require('hash-anything').sha256; //Hash du mdp\r\n\r\n        const url = URL_API+'getPrenom.php?mail='+this.state.email+'&password='+sha256(this.state.password);\r\n        axios.get(url)\r\n        .then(res => {\r\n          if(res.data>0){\r\n            //Se connecter\r\n            console.log(\"Mail et mdp bon ! Votre id est : \",res.data);\r\n          }else{\r\n            //Affichage en rouge du message de mdp incorrect\r\n            this.setState({alertShow:true,alertMessage:\"Adresse mail ou mot de passe incorrect.\",alertVariant:\"danger\"});\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          //Affichage en jaune qu'il y a une erreur dans la requête\r\n          this.setState({alertShow:true,alertMessage:\"Une erreur s'est produite.\",alertVariant:\"warning\"});\r\n        });\r\n\r\n      }\r\n     \r\n      inputChange(event) {\r\n        event.preventDefault();\r\n        /* Mise à jour des valeurs des inputs */\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n          [name]: value\r\n        })\r\n      }\r\n\r\n    render(){\r\n      return(\r\n        <div>\r\n          {/* Alert affichée lorsque le couple (e-mail,mdp) n'est pas trouvé dans la base de donnée */}\r\n          <Alert\r\n          variant={this.state.alertVariant} \r\n          id=\"AlertIncorrect\" \r\n          show={this.state.alertShow} \r\n          onClose={() => this.setState({alertShow:false})}\r\n          dismissible>\r\n            {this.state.alertMessage}\r\n          </Alert>\r\n\r\n          {/* Formulaire de connexion */}\r\n          <form onSubmit={event => this.sendLogin(event)}>\r\n            <input className=\"input\"\r\n              name=\"email\"\r\n              type=\"text\"\r\n              placeholder=\"Ton adresse e-mail\"\r\n              value={this.state.email}\r\n              onChange={event => this.inputChange(event)} \r\n            />\r\n            <br />\r\n            <br />\r\n            <input className=\"input\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Ton mot de passe\"\r\n              value={this.state.password}\r\n              onChange={event => this.inputChange(event)} \r\n            />\r\n            <br />\r\n            <button className=\"btn btn-danger\" type=\"submit\">Connexion</button>\r\n          </form>\r\n\r\n          {/* Mot de passe oublié, redirection à définir, accueil pour l'instant */}\r\n          <NavLink className=\"text-pink\" to=\"/\" >Mot de passe oublié ?</NavLink>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\n\r\nimport {URL_API} from '../App';\r\n\r\nclass Register extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n          //Valeur des input email, password, prenom, nom, dateBirth, ville et StudentCard\r\n          email: \"\", password : \"\", verifPassword : \"\", prenom : \"\", nom : \"\", dateBirth : \"\", ville : \"\",\r\n          StudentCard: null,\r\n          alertShow:false, alertMessage:\"\", alertClass:\"alert-danger\", //Affichage, type et définition du message de l'alert\r\n          etape: 0 //0 -> Creation du compte; 1 -> Upload carte étudiante; 2 -> Création du compte terminée\r\n        };\r\n      }\r\n\r\n      fifteenYearsAgo(){\r\n        let curr = new Date();\r\n        curr.setDate(curr.getDate()-365*15);\r\n        return (curr.toISOString().substr(0,10));\r\n      }\r\n\r\n      verif(){ //Vérification de la véracité des données\r\n        let positionArobase= this.state.email.indexOf(\"@\");\r\n        if(this.state.email===\"\"){ //Chaîne vide\r\n          this.setState({alertMessage: \"Votre e-mail n'est pas précisé.\"});\r\n          return false;\r\n        }else if(this.state.email.indexOf(\"@\")===-1){ //Ne contient pas de @\r\n          this.setState({alertMessage: \"Votre e-mail n'est pas correcte.\"});\r\n          return false;\r\n        }else if(!(this.state.email.indexOf(\".com\",positionArobase) !== -1 ||\r\n        this.state.email.indexOf(\".fr\",positionArobase) !== -1 ||\r\n        this.state.email.indexOf(\".eu\",positionArobase) !== -1 ||\r\n        this.state.email.indexOf(\".org\",positionArobase) !== -1 ||\r\n        this.state.email.indexOf(\".net\",positionArobase) !== -1)){ //Ne fini pas par .com/.fr/.eu/.org/.net\r\n          this.setState({alertMessage: \"Votre e-mail doit finir par .com/.fr/.eu/.org/.net.\"});\r\n          return false;\r\n        }\r\n        if(this.state.password.length < 6){ //Taille mdp inférieure à 6\r\n          this.setState({alertMessage: \"Votre mot de passe doit contenir plus de 6 caractère.\"});\r\n          return false;\r\n        }else if(this.state.password!==this.state.verifPassword){\r\n          this.setState({alertMessage: \"Vos mots de passe ne correspondent pas.\"});\r\n          return false;\r\n        }\r\n        if(this.state.nom.length < 2 || this.state.nom.length < 2){ //Taille nom et prenom => 2\r\n          this.setState({alertMessage: \"Vous n'avez pas renseignez votre nom/prénom.\"});\r\n          return false;\r\n        }\r\n        if(this.state.ville.length < 2){ //Taille ville => 2\r\n          this.setState({alertMessage: \"Vous n'avez pas renseignez votre ville.\"});\r\n          return false;\r\n        }\r\n        if(this.state.dateBirth===\"\"){\r\n          this.setState({alertMessage: \"Votre date de naissance n'est pas précisée.\"});\r\n          return false;\r\n        }\r\n\r\n        return true;\r\n      }\r\n\r\n      sendAccount(event) {\r\n        event.preventDefault();\r\n        const axios = require('axios');  //Requêtes HTTP\r\n        const sha256 = require('hash-anything').sha256; //Hash du mdp\r\n\r\n        if(!this.verif()){ //Un des champs mal rempli\r\n          this.setState({alertShow:true});\r\n        }else{\r\n          let formData = new FormData();\r\n          formData.append('email',this.state.email);\r\n          formData.append('password',sha256(this.state.password));\r\n          formData.append('prenom',this.state.prenom);\r\n          formData.append('nom',this.state.nom);\r\n          formData.append('dateBirth',this.state.dateBirth);\r\n          formData.append('ville',this.state.ville);\r\n          const url = URL_API+'newUser';\r\n          axios.post(url,formData)\r\n          .then(res => {\r\n            console.log(\"Réponse newUser: \"+res.data);\r\n            if(res.data>=0){\r\n              switch(res.data){\r\n                case 0:\r\n                  this.setState({\r\n                    alertMessage: \"L'adresse mail existe déjà.\",\r\n                    alertClass:\"alert-danger\",\r\n                  });\r\n                  break;\r\n                case 1:\r\n                  this.setState({\r\n                    alertClass:\"alert-primary\",\r\n                    alertMessage: \"Compte crée avec succès !\",\r\n                    etape:1\r\n                  });\r\n                  break;\r\n                default:\r\n                  this.setState({alertMessage: \"La réponse de l'API n'est pas celle attendue.\"});\r\n              }\r\n              this.setState({alertShow: true});\r\n            }else{\r\n              console.error('Problème dans le retour de l\\'API/newUser.');\r\n            }\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n          });\r\n        }\r\n      }\r\n      \r\n      sendCard(event){\r\n        event.preventDefault();\r\n        const axios = require('axios');  //Requêtes HTTP\r\n        \r\n        let formData = new FormData();\r\n        formData.append('file',this.state.StudentCard);\r\n        formData.append('email',this.state.email);\r\n\r\n        const url = URL_API+'setCarteEtudiante';\r\n          axios.post(url,formData)\r\n          .then(res => {\r\n            console.log(\"Réponse setCarteEtudiante: \"+res.data);\r\n            if(res.data>=0){\r\n              switch(res.data){\r\n                case 0:\r\n                  this.setState({\r\n                    alertMessage: \"Aucune carte étudiante n'a été envoyée.\",\r\n                    alertClass:\"alert-secondary\",\r\n                    etape:2\r\n                  });\r\n                  break;\r\n                case 1:\r\n                  this.setState({\r\n                    alertClass:\"alert-primary\",\r\n                    alertMessage: \"Carte étudiante envoyée avec succès !\",\r\n                    etape:2\r\n                  });\r\n                  break;\r\n                case 2:\r\n                  this.setState({\r\n                    alertClass:\"alert-danger\",\r\n                    alertMessage: \"Votre image dépasse 2Mo !\",\r\n                  });\r\n                  break;\r\n                case 3:\r\n                  this.setState({\r\n                    alertClass:\"alert-danger\",\r\n                    alertMessage: \"L'extension de votre image n'est pas acceptée !\",\r\n                  });\r\n                  break;\r\n                default:\r\n                  this.setState({alertMessage: \"La réponse de l'API n'est pas celle attendue.\"});\r\n              }\r\n              this.setState({alertShow: true});\r\n            }else{\r\n              this.setState({\r\n              alertClass:\"alert-warning\",\r\n              alertMessage: \"L'image a rencontré un problème durant l'upload.\",\r\n              alertShow: true\r\n              });\r\n              console.error('Problème dans le retour de l\\'API/setCarteEtudiante.');\r\n            }\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n            this.setState({\r\n              alertClass:\"alert-warning\",\r\n              alertMessage: \"La requête/le serveur a rencontré un problème.\",\r\n              alertShow: true\r\n            });\r\n          });\r\n        }\r\n\r\n      inputChangeStudentCard(event){\r\n        let files = event.target.files;\r\n        let reader = new FileReader();\r\n        if(files[0]!=null){\r\n          reader.readAsDataURL(files[0]);\r\n          reader.onload=(e)=>{\r\n            this.setState({\r\n              StudentCard:files[0]\r\n            })\r\n            console.log(this.state.StudentCard);\r\n          }\r\n        }else{\r\n          this.setState({\r\n            StudentCard:null\r\n          })\r\n        }\r\n      }\r\n\r\n      inputChange(event) {\r\n        event.preventDefault();\r\n        /* Mise à jour des valeurs des inputs */\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n          [name]: value\r\n        })\r\n      }\r\n\r\n    render(){\r\n      /*Il faut que je sépare en deux form donc deux fonctions \r\n      d'envoie et que finisse l'api setCarteEtudiant */\r\n      return(\r\n        <div className=\"text-blue\">\r\n          {this.state.alertShow &&\r\n            <div className={\"alert alert-dismissible fade show \" + this.state.alertClass} >\r\n              {this.state.alertMessage}\r\n            </div>\r\n          }\r\n          {this.state.etape===0  &&\r\n            <form onSubmit={event => this.sendAccount(event)}>\r\n            {/* Formulaire d'enregistrement du compte' */}\r\n              <label htmlFor=\"email\">E-mail :</label>\r\n              <input className=\"input\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                type=\"text\"\r\n                placeholder=\"Ton adresse e-mail\"\r\n                value={this.state.email}\r\n                onChange={event => this.inputChange(event)} \r\n              />\r\n              <br />\r\n              <label htmlFor=\"password\">Mot de passe :</label>\r\n              <input className=\"input\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"Ton mot de passe\"\r\n                value={this.state.password}\r\n                onChange={event => this.inputChange(event)} \r\n              />\r\n              <br />\r\n              <label htmlFor=\"verifPassword\">Vérifie ton mot de passe :</label>\r\n              <input className=\"input\"\r\n                id=\"verifPassword\"\r\n                name=\"verifPassword\"\r\n                type=\"password\"\r\n                placeholder=\"Ton mot de passe\"\r\n                value={this.state.verifPassword}\r\n                onChange={event => this.inputChange(event)} \r\n              />\r\n              <br />\r\n              <label htmlFor=\"nom\">Nom :</label>\r\n              <input className=\"input\"\r\n                id=\"nom\"\r\n                name=\"nom\"\r\n                type=\"text\"\r\n                placeholder=\"Ton Nom\"\r\n                value={this.state.nom}\r\n                onChange={event => this.inputChange(event)} \r\n              />\r\n              <br />\r\n              <label htmlFor=\"prenom\">Prénom :</label>\r\n              <input className=\"input\"\r\n                id=\"prenom\"\r\n                name=\"prenom\"\r\n                type=\"text\"\r\n                placeholder=\"Ton prénom\"\r\n                value={this.state.prenom}\r\n                onChange={event => this.inputChange(event)} \r\n              />\r\n              <br />\r\n              <label htmlFor=\"ville\">Ville :</label>\r\n              <input className=\"input\"\r\n                id=\"ville\"\r\n                name=\"ville\"\r\n                type=\"text\"\r\n                placeholder=\"Ta ville\"\r\n                value={this.state.ville}\r\n                onChange={event => this.inputChange(event)} \r\n              />\r\n              <br />\r\n              <label htmlFor=\"dateBirth\">Date de naissance :</label>\r\n              <input className=\"input\"\r\n                id=\"dateBirth\"\r\n                name=\"dateBirth\"\r\n                type=\"date\"\r\n                maxLength=\"10\"\r\n                placeholder=\"jj/mm/aaaa\"\r\n                min=\"1960-01-01\"\r\n                max={this.fifteenYearsAgo()}\r\n                value={this.state.dateBirth}\r\n                onChange={event => this.inputChange(event)} \r\n              />\r\n              <br/>\r\n              <button className=\"btn btn-danger\" type=\"submit\">S'enregister</button>\r\n            </form>\r\n          }\r\n          {this.state.etape===1  &&\r\n            <form onSubmit={event => this.sendCard(event)}>\r\n            {/* Formulaire pour upload la carte étudiante */}\r\n              <h4>Envoi de la carte étudiante</h4>\r\n              <p color=\"grey\">Votre carte étudiante dois être au format .png/.jpg/.jpeg \r\n              et ne doit pas dépasser 2Mo.</p>\r\n              <label htmlFor=\"Student_Card\">Carte étudiante :</label>\r\n              <input className=\"input\" \r\n              type=\"file\" \r\n              name=\"StudentCard\" \r\n              id=\"Student_Card\"\r\n              onChange={event => this.inputChangeStudentCard(event)} \r\n              />\r\n              <br/>\r\n              <button type=\"submit\">Upload</button>\r\n            </form>\r\n          }\r\n          {this.state.etape===2 &&\r\n            <div>\r\n              <h4 className=\"text-blue\">Ton compte viens d'être créé</h4>\r\n              <p className=\"text-blue\">Je t'invite à aller vite te connecter pour profiter de notre application :)</p>\r\n              <a href=\"/\"><button className=\"btn btn-danger\">Fermer</button></a>\r\n            </div>\r\n          }\r\n\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Register;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport Login from '../Login_register/Login'\r\nimport Register from '../Login_register/Register'\r\n\r\nclass Accueil extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            show: 0, \r\n            /* Correspondance show\r\n            * 0 -> Accueil\r\n            * 1 -> Accueil + Login\r\n            * 2 -> Accueil + Register \r\n            */\r\n        };\r\n    }\r\n    \r\n    /**\r\n     * Changement du state.show\r\n     * @param {*} etat : attribut la valeur etat à state.show\r\n     */\r\n    changeShow(etat){\r\n        this.setState({\r\n            show: etat\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Retourne un l'affichage de la page d'accueil.\r\n     * - Deux boutons : Connexion & Création du compte\r\n     * - L'affichage dépend de this.state.show\r\n     */\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1 className=\"text-blue\">RENCONTRES, DISCUSSIONS,</h1>\r\n                <h2 className=\"text-purp\">ET VOUS ? </h2>\r\n                <h2 className=\"text-blue\">QUI ALLEZ-VOUS ETUDIER ?</h2>\r\n                \r\n                {/* show = 0 -> on affiche deux bouton Login et Register */}\r\n                {this.state.show === 0 && \r\n                    <div className=\"btn-group-vertical\">\r\n                        <button className=\"btn btn-danger\" onClick={etat => this.changeShow(1)}>Se connecter</button>\r\n                        <br/>\r\n                        <button className=\"btn btn-danger\" onClick={etat => this.changeShow(2)}>Se créer un compte</button>\r\n                    </div>\r\n                }\r\n                {/* show = 1 -> on affiche Login */}\r\n                {this.state.show === 1 && \r\n                    <div>\r\n                        {/* Bouton de retour */}\r\n                        <button className=\"close\" onClick={etat => this.changeShow(0)} aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                        {/* Proposition de s'enregistrer s'il n'est pas encore dans la BDD */}\r\n                        <p className=\"text-danger\">Tu n'as toujours pas de compte ?&nbsp;\r\n                            {/* Utilisation du NavLink pour ses propriétés graphiques */}\r\n                            <NavLink className=\"text-pink\" to=\"/\" onClick={etat => this.changeShow(2)}>Je cours m'en faire un !</NavLink>\r\n                        </p>\r\n                        <h2 className=\"text-success\">Connexion</h2>\r\n                        <Login />\r\n                    </div>\r\n                }\r\n                {/* show = 2 -> on affiche Register */}\r\n                {this.state.show === 2 && \r\n                    <div>\r\n                        {/* Bouton de retour */}\r\n                        <button className=\"close\" onClick={etat => this.changeShow(0)} aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                        <h2 className=\"text-success\">Création du compte</h2>\r\n                        <Register />\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Accueil;","import React, { Component } from 'react';\r\nimport InputRange from 'react-input-range';\r\n\r\n\r\nclass Preference extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n          Description : null,\r\n          Taille : null,\r\n          City : \"Cergy\", //Valeur du input City          \r\n          value1: {min: 18, max: 24,},\r\n        };\r\n      }\r\n    \r\n\r\n      \r\n       \r\n\r\n      inputChange(event) {\r\n        event.preventDefault();\r\n        /* Mise à jour des valeurs des inputs */\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n          [name]: value\r\n        })\r\n      }\r\n\r\n    render(){\r\n      return(\r\n        <div>\r\n          {/* Formulaire du profil de la personne' */}\r\n         \r\n          <form onSubmit={event => this.sendLogin(event)}>\r\n            <br/>\r\n            <div>{/* Mettre les images de profils, la possibilité de les suppr ou les rajouter*/}\r\n              <label htmlFor=\"Photo\">Vos photos :</label>\r\n              <input type=\"file\" name=\"Photo\" id=\"Photo\"/>{/* Faire tuto https://www.youtube.com/watch?v=sp9r6hSWH_o */}\r\n            </div>\r\n            <br/>\r\n            {/*--------------------------Sexe--------------------------*/}\r\n            <div className=\"input-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <label className=\"input-group-text\" for=\"sexe\">Je suis :</label>\r\n              </div> \r\n              <div className=\"form-check form-check-inline\">\r\n                <label className=\"form-check-label\" for=\"homme\">un homme</label>\r\n                <input \r\n                  className=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"inlineRadioOptions\"\r\n                  id=\"homme\"\r\n                  value=\"option1\"\r\n                />\r\n              </div>\r\n              <div className=\"form-check form-check-inline\">\r\n                <label className=\"form-check-label\" for=\"femme\">une femme</label>\r\n                <input \r\n                  className=\"form-check-input\" \r\n                  type=\"radio\" \r\n                  name=\"inlineRadioOptions\" \r\n                  id=\"femme\" \r\n                  value=\"option2\"\r\n                />\r\n              </div>\r\n              <div className=\"form-check form-check-inline\">\r\n                <label className=\"form-check-label\" for=\"vivant\">vivant</label>\r\n                <input \r\n                  className=\"form-check-input\" \r\n                  type=\"radio\" \r\n                  name=\"inlineRadioOptions\" \r\n                  id=\"vivant\" \r\n                  value=\"option3\" \r\n                />\r\n              </div>\r\n            </div>\r\n            <br/>\r\n            {/*--------------------------Souhaite voir--------------------------*/}\r\n            <div className=\"input-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <label className=\"input-group-text\" for=\"lookingfor\">Je souhaite rencontrer :</label>\r\n              </div> \r\n              <div className=\"form-check form-check-inline\">\r\n                <label className=\"form-check-label\" for=\"homme\">des hommes</label>\r\n                <input \r\n                  className=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"inlineRadioOptions\"\r\n                  id=\"homme\"\r\n                  value=\"option1\"\r\n                />\r\n              </div>\r\n              <div className=\"form-check form-check-inline\">\r\n                <label className=\"form-check-label\" for=\"femme\">des femmes</label>\r\n                <input \r\n                  className=\"form-check-input\" \r\n                  type=\"radio\" \r\n                  name=\"inlineRadioOptions\" \r\n                  id=\"femme\" \r\n                  value=\"option2\"\r\n                />\r\n              </div>\r\n              <div className=\"form-check form-check-inline\">\r\n                <label className=\"form-check-label\" for=\"both\">les deux</label>\r\n                <input \r\n                  className=\"form-check-input\" \r\n                  type=\"radio\" \r\n                  name=\"inlineRadioOptions\" \r\n                  id=\"both\" \r\n                  value=\"option3\" \r\n                />\r\n              </div>\r\n            </div>\r\n            <br/>\r\n          {/*--------------------------Cherche-------------------------- */}\r\n            <div className=\"input-group \">\r\n              <div className=\"input-group-prepend\">\r\n                <label className=\"input-group-text\" for=\"purpose\">Ce que je cherche :</label>\r\n              </div>\r\n              <select  id=\"purpose\">\r\n                <option selected>A remplir</option>\r\n                <option value=\"1\">Du sérieux</option>\r\n                <option value=\"2\">Aller boire un verre</option>\r\n                <option value=\"3\">On verra</option>\r\n                <option value=\"4\">Pas de prise de tête</option>\r\n                <option value=\"5\">Occuper ma soirée </option>\r\n                <option value=\"5\">Amitié </option>\r\n                <option value=\"5\">Seulement tchatter </option>\r\n              </select>\r\n            </div>\r\n            <br />\r\n           {/*--------------------------Tranche d age-------------------------- */}\r\n          \r\n                <label  for=\"Age\">Tranche d'age :</label>\r\n             \r\n               <InputRange\r\n                  draggableTrack\r\n                  maxValue={35}\r\n                  minValue={18}\r\n                  onChange={value => this.setState({ value1: value })}\r\n                  onChangeComplete={value => console.log(value)}\r\n                  value={this.state.value5} \r\n                />\r\n          \r\n            <br />\r\n            {/*--------------------------Description--------------------------*/}\r\n            <div className=\"input-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <label className=\"input-group-text\" for=\"Description\">A propos de vous :</label>\r\n              </div> \r\n                <textarea\r\n                  id=\"Description\"\r\n                  name=\"Description\"\r\n                  type=\"text\"\r\n                  placeholder=\"Vous avez 350 caractères pour nous en dire plus ;)\"\r\n                  style={{resize: \"none\"}}\r\n                  rows=\"2\"//hauteur\r\n                  cols=\"50\" //largeur\r\n                  maxlength=\"350\"\r\n                  value={this.state.Description}\r\n                  onChange={event => this.inputChange(event)} \r\n                />\r\n            </div>\r\n            <br/>\r\n            {/*-------------------------- City--------------------------*/}\r\n            <div className=\"input-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <label className=\"input-group-text\" for=\"City\">Habite à :</label>\r\n              </div>                <input\r\n                  id=\"City\"\r\n                  name=\"City\"\r\n                  type=\"text\"\r\n                  placeholder=\"Paris\"\r\n                  value={this.state.City}\r\n                  onChange={event => this.inputChange(event)} \r\n                />\r\n            </div>\r\n            <br />\r\n            {/*--------------------------Etudes-------------------------- */}\r\n            <div className=\"input-group \">\r\n              <div className=\"input-group-prepend\">\r\n                <label className=\"input-group-text\" for=\"Study\">J'étudie au :</label>\r\n              </div>\r\n              <select  id=\"Study\">\r\n                <option selected>A remplir</option>\r\n                <option value=\"1\">Lycée</option>\r\n                <option value=\"2\">Université</option>\r\n                <option value=\"3\">Ecole d'Ingénieur</option>\r\n                <option value=\"4\">Ecole de commerce</option>\r\n                <option value=\"5\">Ecole supérieur </option>\r\n                <option value=\"5\">Reconversion </option>\r\n                <option value=\"5\">Année sabatique </option>\r\n              </select>\r\n            </div>\r\n            <br />\r\n            {/*--------------------------Taille-------------------------- */}\r\n            <div className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n              <label className=\"input-group-text\" for=\"Taille\">Taille :</label>\r\n            </div>\r\n                 <input\r\n                  id=\"Taille\"\r\n                  name=\"Taille\"\r\n                  type=\"number\"\r\n                  min=\"100\"\r\n                  max=\"300\"\r\n                  onChange={event => this.inputChange(event)}\r\n                />\r\n              <div className=\"input-group-append\">\r\n                <label className=\"input-group-text\" for=\"Taille\">cm</label>\r\n              </div>\r\n            </div>\r\n          <br />\r\n        {/*--------------------------Yeux-------------------------- */}\r\n          <div className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n              <label className=\"input-group-text\" for=\"Yeux\">Yeux :</label>\r\n            </div>\r\n            <select  id=\"Yeux\">\r\n              <option selected>A remplir</option>\r\n              <option value=\"1\">Noir</option>\r\n              <option value=\"2\">brun </option>\r\n              <option value=\"3\">auburn</option>\r\n              <option value=\"4\">châtain</option>\r\n              <option value=\"5\">roux</option>\r\n              <option value=\"6\">blond </option>\r\n              <option value=\"7\">blanc</option>\r\n              <option value=\"8\">Autre</option>\r\n\r\n            </select>\r\n          </div>\r\n          <br />\r\n          {/*--------------------------Cheveux-------------------------- */}\r\n          <div className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n              <label className=\"input-group-text\" for=\"Hair\">Cheveux :</label>\r\n            </div>\r\n            <select  id=\"Hair\">\r\n              <option selected>A remplir</option>\r\n              <option value=\"1\">Noir</option>\r\n              <option value=\"2\">Marron</option>\r\n              <option value=\"3\">Vert</option>\r\n              <option value=\"4\">Bleue</option>\r\n              <option value=\"5\">Verron</option>\r\n              <option value=\"6\">Autre</option>\r\n\r\n            </select>\r\n          </div>\r\n          <br />\r\n          {/*--------------------------Sport-------------------------- */}\r\n          <div className=\"input-group \">\r\n            <div className=\"input-group-prepend\">\r\n              <label className=\"input-group-text\" for=\"Sport\">Activités physique :</label>\r\n            </div>\r\n            <select  id=\"Sport\">\r\n              <option selected>A remplir</option>\r\n              <option value=\"1\">Passioné</option>\r\n              <option value=\"2\">Régulièrement</option>\r\n              <option value=\"3\">Parfois</option>\r\n              <option value=\"4\">une fois au chalet</option>\r\n              <option value=\"5\">Quelle horreur</option>\r\n            </select>\r\n          </div>\r\n          <br />\r\n          {/*--------------------------Alcool-------------------------- */}\r\n          <div className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n              <label className=\"input-group-text\" for=\"Alcool\">Alcool :</label>\r\n            </div>\r\n            <select  id=\"Alcool\">\r\n              <option selected>A remplir</option>\r\n              <option value=\"1\">Tous les jours</option>\r\n              <option value=\"2\">Régulièrement</option>\r\n              <option value=\"3\">A l'occasion</option>\r\n              <option value=\"4\">Jamais</option>\r\n            </select>\r\n            </div>\r\n          <br />\r\n          {/*--------------------------Tabac-------------------------- */}\r\n          <div className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n              <label className=\"input-group-text\" for=\"Tabac\">Tabac :</label>\r\n            </div>\r\n            <select  id=\"Tabac\">\r\n              <option selected>A remplir</option>\r\n              <option value=\"1\">Fréquemment</option>\r\n              <option value=\"2\">A l'occasion</option>\r\n              <option value=\"3\">Jamais</option>\r\n            </select>\r\n          </div>\r\n          <br />\r\n          {/*--------------------------Animaux Domestique-------------------------- */}\r\n          <div className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n              <label className=\"input-group-text\" for=\"Pet\">Animaux de compagnie :</label>\r\n            </div>\r\n            <select  id=\"Pet\">\r\n              <option selected>A remplir</option>\r\n              <option value=\"1\">Chiens</option>\r\n              <option value=\"2\">Chats</option>\r\n              <option value=\"3\">Beaucoup :)</option>\r\n              <option value=\"4\">Autres</option>\r\n              <option value=\"5\">Aucun</option>\r\n              <option value=\"6\">Allergiques :'(</option>\r\n            </select>\r\n          </div>\r\n          <br />\r\n        {/*--------------------------Religion-------------------------- */}\r\n          <div className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n              <label className=\"input-group-text\" for=\"Religion\">Religion :</label>\r\n            </div>\r\n            <select  id=\"Religion\">\r\n              <option selected>A remplir</option>\r\n              <option value=\"1\">Agnosticisme</option>\r\n              <option value=\"2\">Athéisme</option>\r\n              <option value=\"3\">Bouddhisme</option>\r\n              <option value=\"4\">Christianisme</option>\r\n              <option value=\"5\">Hindouisme</option>\r\n              <option value=\"6\">Jaïnisme</option>\r\n              <option value=\"7\">Judaïsme</option>\r\n              <option value=\"8\">Islam</option>\r\n              <option value=\"9\">Zoroastrisme</option>\r\n              <option value=\"10\">Sikhisme</option>\r\n              <option value=\"11\">Spiritualité</option>\r\n              <option value=\"12\">Autre</option>\r\n            </select>\r\n          </div>\r\n          <br />\r\n          {/*--------------------------Signe Astro-------------------------- */}\r\n          <div className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n              <label className=\"input-group-text\" for=\"Astro\">Signe astrlogique :</label>\r\n            </div>\r\n            <select  id=\"Asro\">\r\n              <option selected>A remplir</option>\r\n              <option value=\"1\">Verseau</option>\r\n              <option value=\"2\">Poissons</option>\r\n              <option value=\"3\">Bélier</option>\r\n              <option value=\"4\">Taureau</option>\r\n              <option value=\"5\">Gémeaux</option>\r\n              <option value=\"6\">Cancer</option>\r\n              <option value=\"7\">Lion</option>\r\n              <option value=\"8\">Vierge</option>\r\n              <option value=\"9\">Scorpion</option>\r\n              <option value=\"10\">Sagittaire</option>\r\n              <option value=\"11\">Capricorne</option>\r\n            </select>\r\n          </div>\r\n          <br />\r\n          {/*--------------------------SAVE-------------------------- */}\r\n            <button type=\"submit\">Sauvegarder</button>\r\n          </form>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Preference;\r\n","//https://api-adresse.data.gouv.fr/search/?q=Cergy&type=municipality&autocomplete=1\r\nimport React, { Component } from 'react';\r\n\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\n/**\r\n * Composant de test (Théo)\r\n * J'utilise ce composant à l'adresse /position afin d'effectuer \r\n * des tests pour savoir si il est cohérent de le rajouter\r\n * lors de l'inscription afin de recup les coordonnées GPS \r\n * pour pouvoir calculer la distance entre deux personnes\r\n */\r\n\r\nclass Position extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n          alertShow: false, alertMessage : \"\", alertVariant:\"\",//Affichage, message et type de l'alerte\r\n          ville: \"\", //Input avec la ville\r\n          name: \"\", lat: null, long: null //Res de l'API, ville et coordonnées GPS\r\n          \r\n        };\r\n      }\r\n     \r\n      sendLogin(event) {\r\n        event.preventDefault();\r\n        {/*const axios = require('axios').default;  //Requêtes HTTP\r\n\r\n        const url = \"https://api-adresse.data.gouv.fr/search/?q=\"+this.state.ville+\"&type=municipality&autocomplete=1\"\r\n        axios.get(url)\r\n        .then(res => {\r\n          if(res.data>0){\r\n            //Se connecter\r\n            console.log(\"Mail et mdp bon ! Votre id est : \",res.data);\r\n          }else{\r\n            this.setState({\r\n                password:res.data\r\n            });\r\n            for(let i=0;i<10;i++){\r\n                if(res.data.features[i]!=null){\r\n                    console.log(res.data.features[i]);\r\n                }\r\n            }\r\n            //Affichage en rouge du message de mdp incorrect\r\n            this.setState({alertShow:true,alertMessage:\"Adresse mail ou mot de passe incorrect.\",alertVariant:\"danger\"});\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          //Affichage en jaune qu'il y a une erreur dans la requête\r\n          this.setState({alertShow:true,alertMessage:\"Une erreur s'est produite.\",alertVariant:\"warning\"});\r\n        });*/}\r\n\r\n      }\r\n\r\n      inputChangeVille(event){\r\n        event.preventDefault();\r\n        this.setState({\r\n          ville: event.target.value\r\n        })\r\n        const axios = require('axios').default;\r\n        const url = \"https://api-adresse.data.gouv.fr/search/?q=\"+event.target.value+\"&type=municipality&autocomplete=1\"\r\n        axios.get(url)\r\n        .then(res => {\r\n            console.log(res);\r\n            if(res.data!==null){\r\n            for(let i=0;i<10;i++){\r\n                if(res.data.features[0]!=null){\r\n                    this.setState({\r\n                        name: res.data.features[0].properties.city,\r\n                        lat: res.data.features[0].geometry.coordinates[1],\r\n                        long: res.data.features[0].geometry.coordinates[0]\r\n                    })\r\n                    console.log(\"name : \"+res.data.features[0].properties.city);\r\n                    console.log(\"lat : \"+res.data.features[0].geometry.coordinates[1]);\r\n                    console.log(\"long : \"+res.data.features[0].geometry.coordinates[0]);\r\n                    this.setState({alertShow:true,alertMessage:\"Ville trouvée.\",alertVariant:\"secondary\"});\r\n                }\r\n            }\r\n        }\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          //Affichage en jaune qu'il y a une erreur dans la requête\r\n          this.setState({alertShow:true,alertMessage:\"Une erreur s'est produite.\",alertVariant:\"warning\"});\r\n        });\r\n\r\n      }\r\n\r\n    render(){\r\n      return(\r\n        <div>\r\n          <Alert\r\n          variant={this.state.alertVariant} \r\n          id=\"AlertIncorrect\" \r\n          show={this.state.alertShow} \r\n          onClose={() => this.setState({alertShow:false})}\r\n          dismissible>\r\n            {this.state.alertMessage}\r\n          </Alert>\r\n\r\n          {/* Formulaire de position */}\r\n          <form onSubmit={event => this.sendLogin(event)}>\r\n            <input className=\"input\"\r\n              name=\"ville\"\r\n              type=\"text\"\r\n              placeholder=\"Ville\"\r\n              value={this.state.ville}\r\n              onChange={event => this.inputChangeVille(event)} \r\n            /><label htmlFor=\"ville\">{\"Ville trouvée : \"+this.state.name}</label>\r\n            {/* Peut-être faire une liste déroulante si l'api met pas la ville en 1er */}\r\n            <br />\r\n            <button className=\"btn btn-danger\" type=\"submit\">Ne fais rien</button>\r\n          </form>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Position;","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport NavBar from './NavBar/NavBar';\r\nimport Accueil from './Accueil/Acceuil';\r\nimport Preference from './Profil/Preference';\r\nimport Position from './Position/Position';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <NavBar />\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Accueil} />\r\n            <Route path=\"/preference\" exact component={Preference} />\r\n            <Route path=\"/position\" exact component={Position} />\r\n          </Switch>\r\n          \r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n//J'ai enlevé le fichier projet-web_bdd et mis les fichiers dans /src/api\r\nexport const URL_API = 'https://projetwebeisti.000webhostapp.com/api/';\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}